name: üì∏ T√©l√©charger toutes les images DofusDB

on:
  # D√©clenchement manuel depuis GitHub
  workflow_dispatch:
    inputs:
      force_download:
        description: 'Forcer le re-t√©l√©chargement des images existantes'
        required: false
        default: 'false'
        type: boolean
      max_images:
        description: 'Nombre max d images √† t√©l√©charger (0 = illimit√©)'
        required: false
        default: '0'
        type: string

  # D√©clenchement automatique sur push (optionnel)
  # push:
  #   branches: [ main ]
  #   paths: [ 'src/scripts/**' ]

jobs:
  download-images:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout du code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: üîß Installation des d√©pendances
      run: npm ci
      
    - name: üìÅ Cr√©ation des dossiers d'images
      run: |
        mkdir -p public/images/items
        mkdir -p public/images/resources
        
    - name: üîç V√©rification de l'espace disque
      run: df -h
      
    - name: üöÄ Extraction et t√©l√©chargement complet
      run: |
        echo "üåü D√©but de l'extraction compl√®te..."
        echo "Force download: ${{ github.event.inputs.force_download }}"
        echo "Max images: ${{ github.event.inputs.max_images }}"
        
        # Exporter les variables d'environnement pour le script
        export FORCE_DOWNLOAD="${{ github.event.inputs.force_download }}"
        export MAX_IMAGES="${{ github.event.inputs.max_images }}"
        
        # Lancer le script d'extraction
        node src/scripts/extractAndDownload.js
        
    - name: üìä Statistiques des images t√©l√©charg√©es
      run: |
        echo "üì¶ Images d'items:"
        ls -la public/images/items/ | wc -l
        du -sh public/images/items/
        
        echo "üß± Images de ressources:"
        ls -la public/images/resources/ | wc -l  
        du -sh public/images/resources/
        
        echo "üíæ Taille totale:"
        du -sh public/images/
        
    - name: üîç V√©rification des changements
      id: verify-changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Nouvelles images d√©tect√©es"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è Aucune nouvelle image"
        fi
        
    - name: üìù Commit des nouvelles images
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Ajouter seulement les images
        git add public/images/
        
        # Compter les nouvelles images
        ITEMS_COUNT=$(ls -1 public/images/items/*.png 2>/dev/null | wc -l)
        RESOURCES_COUNT=$(ls -1 public/images/resources/*.png 2>/dev/null | wc -l)
        TOTAL_SIZE=$(du -sh public/images/ | cut -f1)
        
        # Commit avec message d√©taill√©
        git commit -m "üì∏ Mise √† jour banque d'images DofusDB - Items: ${ITEMS_COUNT}, Ressources: ${RESOURCES_COUNT}, Taille: ${TOTAL_SIZE}"
        
    - name: üöÄ Push vers le repository
      if: steps.verify-changes.outputs.changes == 'true'
      run: |
        git push
        echo "‚úÖ Images pouss√©es vers le repository"
        echo "üåê Netlify va red√©ployer automatiquement"
        
    - name: üìã R√©sum√© final
      run: |
        echo "üéâ EXTRACTION TERMIN√âE"
        echo "====================="
        
        if [ "${{ steps.verify-changes.outputs.changes }}" == "true" ]; then
          echo "‚úÖ Nouvelles images ajout√©es et commit√©es"
          echo "üåê Netlify va red√©ployer avec les nouvelles images"
          echo "‚ö° Les utilisateurs verront les images instantan√©ment"
        else
          echo "‚ÑπÔ∏è Aucune nouvelle image √† ajouter"
          echo "‚úÖ La banque d'images est √† jour"
        fi
        
        echo ""
        echo "üìä Statistiques finales:"
        echo "‚Ä¢ Items: $(ls -1 public/images/items/*.png 2>/dev/null | wc -l) images"
        echo "‚Ä¢ Ressources: $(ls -1 public/images/resources/*.png 2>/dev/null | wc -l) images"
        echo "‚Ä¢ Taille: $(du -sh public/images/ 2>/dev/null | cut -f1 || echo '0')"
        
    - name: üö® Notification en cas d'erreur
      if: failure()
      run: |
        echo "‚ùå ERREUR lors du t√©l√©chargement"
        echo "V√©rifiez les logs ci-dessus pour plus de d√©tails"
        echo "Possible causes:"
        echo "‚Ä¢ API DofusDB indisponible"
        echo "‚Ä¢ Probl√®me de r√©seau"
        echo "‚Ä¢ Espace disque insuffisant"
